name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync

      - name: Run Ruff linter
        run: uv run ruff check .

      - name: Check code formatting
        run: uv run ruff format --check .

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync

      - name: Run Pyright
        run: uv run pyright

  test:
    name: Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: flowlog_test
          POSTGRES_USER: flowlog_user
          POSTGRES_PASSWORD: flowlog_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync

      - name: Run migrations
        env:
          DATABASE_URL: postgresql://flowlog_user:flowlog_password@localhost:5432/flowlog_test
        run: uv run alembic upgrade head

      - name: Run tests with coverage
        env:
          DATABASE_URL: postgresql://flowlog_user:flowlog_password@localhost:5432/flowlog_test
          SECRET_KEY: test-secret-key-for-ci
          ENVIRONMENT: test
        run: uv run pytest tests/ -v --cov=app --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
